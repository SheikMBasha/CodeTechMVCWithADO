//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CodeTechnologiesMVCADO.CodeTechWCF {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExamNature", Namespace="http://schemas.datacontract.org/2004/07/CodeTechnologiesWCF.HelperClass.Exams")]
    [System.SerializableAttribute()]
    public partial class ExamNature : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExamsType", Namespace="http://schemas.datacontract.org/2004/07/CodeTechnologiesWCF.HelperClass.Exams")]
    [System.SerializableAttribute()]
    public partial class ExamsType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExamTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExamType {
            get {
                return this.ExamTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExamTypeField, value) != true)) {
                    this.ExamTypeField = value;
                    this.RaisePropertyChanged("ExamType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExamCodes", Namespace="http://schemas.datacontract.org/2004/07/CodeTechnologiesWCF.HelperClass.Exams")]
    [System.SerializableAttribute()]
    public partial class ExamCodes : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExamCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExamTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientId {
            get {
                return this.ClientIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIdField, value) != true)) {
                    this.ClientIdField = value;
                    this.RaisePropertyChanged("ClientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExamCode {
            get {
                return this.ExamCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExamCodeField, value) != true)) {
                    this.ExamCodeField = value;
                    this.RaisePropertyChanged("ExamCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExamType {
            get {
                return this.ExamTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExamTypeField, value) != true)) {
                    this.ExamTypeField = value;
                    this.RaisePropertyChanged("ExamType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AcademyModel", Namespace="http://schemas.datacontract.org/2004/07/WcfService1.HelperClass")]
    [System.SerializableAttribute()]
    public partial class AcademyModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POCNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POCName {
            get {
                return this.POCNameField;
            }
            set {
                if ((object.ReferenceEquals(this.POCNameField, value) != true)) {
                    this.POCNameField = value;
                    this.RaisePropertyChanged("POCName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((this.PhoneField.Equals(value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CodeTechWCF.ICodeTechnologiesServices")]
    public interface ICodeTechnologiesServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExams/GetAllExamNature", ReplyAction="http://tempuri.org/IExams/GetAllExamNatureResponse")]
        System.Collections.Generic.List<CodeTechnologiesMVCADO.CodeTechWCF.ExamNature> GetAllExamNature();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExams/GetAllExamNature", ReplyAction="http://tempuri.org/IExams/GetAllExamNatureResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<CodeTechnologiesMVCADO.CodeTechWCF.ExamNature>> GetAllExamNatureAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExams/GetAllExamTypes", ReplyAction="http://tempuri.org/IExams/GetAllExamTypesResponse")]
        System.Collections.Generic.List<CodeTechnologiesMVCADO.CodeTechWCF.ExamsType> GetAllExamTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExams/GetAllExamTypes", ReplyAction="http://tempuri.org/IExams/GetAllExamTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<CodeTechnologiesMVCADO.CodeTechWCF.ExamsType>> GetAllExamTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExams/GetAllExamCodes", ReplyAction="http://tempuri.org/IExams/GetAllExamCodesResponse")]
        System.Collections.Generic.List<CodeTechnologiesMVCADO.CodeTechWCF.ExamCodes> GetAllExamCodes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExams/GetAllExamCodes", ReplyAction="http://tempuri.org/IExams/GetAllExamCodesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<CodeTechnologiesMVCADO.CodeTechWCF.ExamCodes>> GetAllExamCodesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAcademy/GetAllAcademies", ReplyAction="http://tempuri.org/IAcademy/GetAllAcademiesResponse")]
        System.Collections.Generic.List<CodeTechnologiesMVCADO.CodeTechWCF.AcademyModel> GetAllAcademies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAcademy/GetAllAcademies", ReplyAction="http://tempuri.org/IAcademy/GetAllAcademiesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<CodeTechnologiesMVCADO.CodeTechWCF.AcademyModel>> GetAllAcademiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAcademy/AdddAcademy", ReplyAction="http://tempuri.org/IAcademy/AdddAcademyResponse")]
        void AdddAcademy(CodeTechnologiesMVCADO.CodeTechWCF.AcademyModel academyObj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAcademy/AdddAcademy", ReplyAction="http://tempuri.org/IAcademy/AdddAcademyResponse")]
        System.Threading.Tasks.Task AdddAcademyAsync(CodeTechnologiesMVCADO.CodeTechWCF.AcademyModel academyObj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAcademy/getAcademy", ReplyAction="http://tempuri.org/IAcademy/getAcademyResponse")]
        CodeTechnologiesMVCADO.CodeTechWCF.AcademyModel getAcademy(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAcademy/getAcademy", ReplyAction="http://tempuri.org/IAcademy/getAcademyResponse")]
        System.Threading.Tasks.Task<CodeTechnologiesMVCADO.CodeTechWCF.AcademyModel> getAcademyAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAcademy/UpdateAcademy", ReplyAction="http://tempuri.org/IAcademy/UpdateAcademyResponse")]
        void UpdateAcademy(CodeTechnologiesMVCADO.CodeTechWCF.AcademyModel academyObj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAcademy/UpdateAcademy", ReplyAction="http://tempuri.org/IAcademy/UpdateAcademyResponse")]
        System.Threading.Tasks.Task UpdateAcademyAsync(CodeTechnologiesMVCADO.CodeTechWCF.AcademyModel academyObj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAcademy/DeleteAcademy", ReplyAction="http://tempuri.org/IAcademy/DeleteAcademyResponse")]
        void DeleteAcademy(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAcademy/DeleteAcademy", ReplyAction="http://tempuri.org/IAcademy/DeleteAcademyResponse")]
        System.Threading.Tasks.Task DeleteAcademyAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICodeTechnologiesServicesChannel : CodeTechnologiesMVCADO.CodeTechWCF.ICodeTechnologiesServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CodeTechnologiesServicesClient : System.ServiceModel.ClientBase<CodeTechnologiesMVCADO.CodeTechWCF.ICodeTechnologiesServices>, CodeTechnologiesMVCADO.CodeTechWCF.ICodeTechnologiesServices {
        
        public CodeTechnologiesServicesClient() {
        }
        
        public CodeTechnologiesServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CodeTechnologiesServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CodeTechnologiesServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CodeTechnologiesServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<CodeTechnologiesMVCADO.CodeTechWCF.ExamNature> GetAllExamNature() {
            return base.Channel.GetAllExamNature();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<CodeTechnologiesMVCADO.CodeTechWCF.ExamNature>> GetAllExamNatureAsync() {
            return base.Channel.GetAllExamNatureAsync();
        }
        
        public System.Collections.Generic.List<CodeTechnologiesMVCADO.CodeTechWCF.ExamsType> GetAllExamTypes() {
            return base.Channel.GetAllExamTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<CodeTechnologiesMVCADO.CodeTechWCF.ExamsType>> GetAllExamTypesAsync() {
            return base.Channel.GetAllExamTypesAsync();
        }
        
        public System.Collections.Generic.List<CodeTechnologiesMVCADO.CodeTechWCF.ExamCodes> GetAllExamCodes() {
            return base.Channel.GetAllExamCodes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<CodeTechnologiesMVCADO.CodeTechWCF.ExamCodes>> GetAllExamCodesAsync() {
            return base.Channel.GetAllExamCodesAsync();
        }
        
        public System.Collections.Generic.List<CodeTechnologiesMVCADO.CodeTechWCF.AcademyModel> GetAllAcademies() {
            return base.Channel.GetAllAcademies();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<CodeTechnologiesMVCADO.CodeTechWCF.AcademyModel>> GetAllAcademiesAsync() {
            return base.Channel.GetAllAcademiesAsync();
        }
        
        public void AdddAcademy(CodeTechnologiesMVCADO.CodeTechWCF.AcademyModel academyObj) {
            base.Channel.AdddAcademy(academyObj);
        }
        
        public System.Threading.Tasks.Task AdddAcademyAsync(CodeTechnologiesMVCADO.CodeTechWCF.AcademyModel academyObj) {
            return base.Channel.AdddAcademyAsync(academyObj);
        }
        
        public CodeTechnologiesMVCADO.CodeTechWCF.AcademyModel getAcademy(int id) {
            return base.Channel.getAcademy(id);
        }
        
        public System.Threading.Tasks.Task<CodeTechnologiesMVCADO.CodeTechWCF.AcademyModel> getAcademyAsync(int id) {
            return base.Channel.getAcademyAsync(id);
        }
        
        public void UpdateAcademy(CodeTechnologiesMVCADO.CodeTechWCF.AcademyModel academyObj) {
            base.Channel.UpdateAcademy(academyObj);
        }
        
        public System.Threading.Tasks.Task UpdateAcademyAsync(CodeTechnologiesMVCADO.CodeTechWCF.AcademyModel academyObj) {
            return base.Channel.UpdateAcademyAsync(academyObj);
        }
        
        public void DeleteAcademy(int id) {
            base.Channel.DeleteAcademy(id);
        }
        
        public System.Threading.Tasks.Task DeleteAcademyAsync(int id) {
            return base.Channel.DeleteAcademyAsync(id);
        }
    }
}
